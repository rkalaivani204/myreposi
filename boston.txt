pip install tensorflow

from sklearn.model_selection import train_test_split
from tensorflow.keras import layers
from tensorflow  import keras
from sklearn.datasets import load_boston
import matplotlib.pyplot as plt
from tensorflow.keras.layers import Dense
from tensorflow.keras import Sequential
from sklearn.preprocessing import StandardScaler

data=load_boston()
x = data.data
y= data.target

x_train,x_val,y_train,y_val=train_test_split(x,y,test_size=0.2,random_state=32)

scaler = StandardScaler()
x_train = scaler.fit_transfrom(x)
y_val = scaler.transfrom(y_val)

model = Sequential()
model.add(Dense(64, input_shape=(x_train.shape[1],),activation='relu'))
model.add(Dense(32,activation='relu'))

model.add(Dense(1))

ypred=model.predict(x_train)

model.compile(optimizer='adam',loss='mse',metrics=['mae'])

history=model.fit(x_train,y_train,epochs=10)

plt.figure(figsize=(5,5))
plt.plot(history.history['mae'])
plt.plot(history.history['loss'])
plt.title("Accuracy")
plt.xlabel('Epochs')
plt.ylabel('loss')
plt.show()


from sklearn.metrics import mean_squared_error,r2_score
print("MSE:",mean_squared_error)

from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_squared_error,r2_score
print("MAE:",mean_absolute_error)
 